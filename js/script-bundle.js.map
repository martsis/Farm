{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/settings.js","webpack:///./js/index.js","webpack:///./js/blocks.js","webpack:///./js/view.js","webpack:///./js/storage.js","webpack:///./js/blocksInit.js","webpack:///./js/iterations.js","webpack:///./js/position.js","webpack:///./js/adds.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MAIN_HEIGHT","MAIN_WIDTH","BLOCK_HEIGHT","BLOCK_WIDTH","VIEW_HEIGHT","VIEW_WIDHT","UNICELLULAR_COUNT","UNICELLULAR_CHILDREN","HEALTH","FOOD_COUNT","INTOXICATE_PROB","WALL_COUNT","totalIterations","totalGenerations","totalSurvivors","isPaused","saveEnabled","view","storage","blocksInit","iterations","init","check","updateCanvas","setInterval","run","settings","adds","Stuff","context","positionX","positionY","this","text","beginPath","rect","closePath","strokeStyle","getColor","stroke","font","fillText","Unicellular","iterator","super","nda","health","direction","getRandomInt","undefined","subIterator","id","push","nextPositionX","nextPositionY","type","foodIndex","foodIsIntoxicated","index","blocks","walls","unicellulars","foods","isIntoxicated","iteratorUp","healthUp","death","move","take","see","rotate","takePositionX","takePositionY","count","Food","Wall","stuffs","wrapper","document","createElement","canvas","totalIterationText","totalGenerationText","totalSurvivorText","toolbar","body","pauseButton","append","style","backgroundColor","width","margin","getContext","height","textContent","addEventListener","pauseToggle","color","requestAnimationFrame","draw","localStorage","unicsStors","JSON","parse","position","keys","length","newPosition","getNewPosition","x","y","survivor","do","newUnicellulars","newUnicellularsCount","stringify","u","forEach","arr","randomD","NaN","unique","min","max","Math","floor","random"],"mappings":"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","file":"script-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const MAIN_WIDTH = 60;\r\nconst MAIN_HEIGHT = 35;\r\nconst BLOCK_WIDTH = 20;\r\nconst BLOCK_HEIGHT = 20;\r\nconst VIEW_HEIGHT = MAIN_HEIGHT * BLOCK_HEIGHT;\r\nconst VIEW_WIDHT = MAIN_WIDTH * BLOCK_WIDTH;\r\nconst UNICELLULAR_COUNT = 60;\r\nconst UNICELLULAR_CHILDREN = 4;\r\nconst HEALTH = 100;\r\nconst FOOD_COUNT = 150;\r\nconst INTOXICATE_PROB = 20;\r\nconst WALL_COUNT = 150;\r\nlet totalIterations = 0;\r\nlet totalGenerations = 1;\r\nlet totalSurvivors = 0;\r\nlet isPaused = true;\r\nlet saveEnabled = false;\r\n\r\nmodule.exports = {\r\n    MAIN_HEIGHT,\r\n    MAIN_WIDTH,\r\n    BLOCK_HEIGHT,\r\n    BLOCK_WIDTH,\r\n    VIEW_HEIGHT,\r\n    VIEW_WIDHT,\r\n    UNICELLULAR_COUNT,\r\n    UNICELLULAR_CHILDREN,\r\n    HEALTH,\r\n    FOOD_COUNT,\r\n    INTOXICATE_PROB,\r\n    WALL_COUNT,\r\n    totalIterations,\r\n    totalGenerations,\r\n    totalSurvivors,\r\n    isPaused,\r\n    saveEnabled\r\n}","const settings = require('./settings');\r\nconst blocks = require('./blocks');\r\nconst view = require('./view');\r\nconst storage = require('./storage');\r\nconst blocksInit = require('./blocksInit');\r\nconst iterations = require('./iterations');\r\nconst position = require('./position');\r\n\r\nview.init();\r\nstorage.check();\r\nblocksInit.init();\r\n\r\nview.updateCanvas();\r\n\r\nsetInterval(iterations.run, 100);","const settings = require('./settings');\r\nconst adds = require('./adds');\r\n//const Stuff = require('./blocks/Stuff');\r\n//const Unicellular = require('./blocks/Unicellular');\r\n//const Food = require('./blocks/Food');\r\n//const Wall = require('./blocks/Wall');\r\n\r\nclass Stuff {\r\n    constructor(context, positionX, positionY){\r\n        this.context = context;\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n        this.text = '';\r\n    }\r\n\r\n    draw(){\r\n        this.context.beginPath();\r\n        this.context.rect(\r\n                (this.positionX * settings.BLOCK_WIDTH) + 1, \r\n                (this.positionY * settings.BLOCK_HEIGHT) + 1, \r\n                settings.BLOCK_WIDTH - 1, \r\n                settings.BLOCK_HEIGHT - 1\r\n            );\r\n        this.context.closePath();\r\n        this.context.strokeStyle = this.getColor();\r\n        this.context.stroke();\r\n        this.context.font = `${settings.BLOCK_HEIGHT-2}px serif`;\r\n        this.context.fillText(\r\n            this.text, \r\n            (this.positionX * settings.BLOCK_WIDTH) + 1, \r\n            (this.positionY * settings.BLOCK_HEIGHT) + (settings.BLOCK_HEIGHT - 1)\r\n            );\r\n    }\r\n\r\n    getColor(){\r\n        return 'black';\r\n    }\r\n}\r\n\r\nclass Unicellular extends Stuff {\r\n    constructor(context, positionX, positionY, iterator = undefined){\r\n        super(context, positionX, positionY)\r\n        this.nda = [];\r\n        this.health = settings.HEALTH;\r\n        this.direction = adds.getRandomInt(0, 7);\r\n        if (iterator !== undefined){\r\n            this.iterator = iterator;    \r\n        } else {\r\n            this.iterator = 0;\r\n        }\r\n        this.subIterator = 0;\r\n        this.id;\r\n\r\n        for (let i = 0; i < 64; i++){\r\n            this.nda.push(adds.getRandomInt(0, 63));\r\n        }\r\n    }\r\n\r\n    getColor(){\r\n        if (this.health > 0) {\r\n            return 'blue';\r\n        } else {\r\n            return 'gray';\r\n        }\r\n    }\r\n\r\n    move(value){\r\n        let nextPositionX = this.positionX;\r\n        let nextPositionY = this.positionY;\r\n        let type = 0;\r\n        let foodIndex = 0;\r\n        let foodIsIntoxicated = false;\r\n\r\n        if (this.direction == value){\r\n            switch(value){\r\n                case 0:\r\n                    nextPositionY--;\r\n                    break;\r\n                case 1:\r\n                    nextPositionY--;\r\n                    nextPositionX++;\r\n                    break;\r\n                case 2:\r\n                    nextPositionX++;\r\n                    break;\r\n                case 3:\r\n                    nextPositionX++;\r\n                    nextPositionY++;\r\n                    break;\r\n                case 4:\r\n                    nextPositionY++;\r\n                    break;\r\n                case 5:\r\n                    nextPositionX--;\r\n                    nextPositionY++;\r\n                    break;\r\n                case 6:\r\n                    nextPositionX--;\r\n                    break;\r\n                case 7:\r\n                    nextPositionX--;\r\n                    nextPositionY--;\r\n                    break;\r\n            }\r\n\r\n            if (nextPositionX < 0) {\r\n                nextPositionX = settings.MAIN_WIDTH;\r\n            }\r\n\r\n            if (nextPositionX > settings.MAIN_WIDTH) {\r\n                nextPositionX = 0;\r\n            }\r\n\r\n            if (nextPositionY < 0) {\r\n                nextPositionY = settings.MAIN_HEIGHT;\r\n            }\r\n\r\n            if (nextPositionY > settings.MAIN_HEIGHT){\r\n                nextPositionY = 0;\r\n            }\r\n\r\n            for (let index in blocks.walls){\r\n                if (blocks.walls[index].positionX == nextPositionX \r\n                    && blocks.walls[index].positionY == nextPositionY){\r\n                        type = 1;\r\n                        break;\r\n                }\r\n            }\r\n            \r\n            for (let index in blocks.unicellulars){\r\n                if (blocks.unicellulars[index].positionX == nextPositionX \r\n                    && blocks.unicellulars[index].positionY == nextPositionY){\r\n                        type = 3;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            for (let index in blocks.foods){\r\n                if (blocks.foods[index].positionX == nextPositionX \r\n                    && blocks.foods[index].positionY == nextPositionY){\r\n                        foodIsIntoxicated = blocks.foods[index].isIntoxicated;\r\n                        \r\n                        if (foodIsIntoxicated){\r\n                            type = 4;\r\n                        } else {\r\n                            type = 2;\r\n                        }\r\n\r\n                        foodIndex = index;\r\n                        break;\r\n                }\r\n            }\r\n        }   \r\n        \r\n        switch(type){\r\n            case 1:\r\n                // стена\r\n                this.iteratorUp(1);\r\n                break;\r\n            case 2:\r\n                // еда\r\n                this.iteratorUp(2);\r\n                this.healthUp();\r\n                delete(blocks.foods[foodIndex]);\r\n                break;\r\n            case 3:\r\n                // бот\r\n                this.iteratorUp(3);\r\n                break;\r\n            case 4:\r\n                // яд\r\n                if (!foodIsIntoxicated){\r\n                    this.healthUp();\r\n                } \r\n\r\n                delete(blocks.foods[foodIndex]);\r\n                this.positionX = nextPositionX;\r\n                this.positionY = nextPositionY;\r\n                this.death();\r\n                break;\r\n\r\n            default:\r\n                // свободно\r\n                this.positionX = nextPositionX;\r\n                this.positionY = nextPositionY;\r\n                this.iteratorUp(5);\r\n                break;\r\n        }\r\n\r\n        this.subIterator = 10;\r\n    }\r\n\r\n    do(){\r\n        // если живой\r\n        if (this.health > 0){\r\n            do {\r\n                const value = this.nda[this.iterator];\r\n    \r\n                if (value <= 7){\r\n                    this.move(value);\r\n                } else if (value >= 8 && value <= 15){\r\n                    this.take(value);\r\n                } else if (value >= 16 && value <= 23){\r\n                    this.see(value);\r\n                } else if (value >= 24 && value <= 31){\r\n                    this.rotate(value);\r\n                } else {\r\n                    this.subIterator++;\r\n                    this.iteratorUp(value);\r\n                }\r\n            } while (this.subIterator < 10)\r\n\r\n            this.health--;\r\n            this.subIterator = 0;\r\n            this.text = this.health;\r\n        }\r\n    }\r\n\r\n    take(value) {\r\n        let type = 0;\r\n\r\n        let takePositionX = this.positionX;\r\n        let takePositionY = this.positionY;\r\n        let foodIndex = 0;\r\n        let foodIsIntoxicated = false;\r\n\r\n        switch(value){\r\n            case 8:\r\n                takePositionY--;\r\n                break;\r\n            case 9:\r\n                takePositionY--;\r\n                takePositionX++;\r\n                break;\r\n            case 10:\r\n                takePositionX++;\r\n                break;\r\n            case 11:\r\n                takePositionX++;\r\n                takePositionY++;\r\n                break;\r\n            case 12:\r\n                takePositionY++;\r\n                break;\r\n            case 13:\r\n                takePositionX--;\r\n                takePositionY++;\r\n                break;\r\n            case 14:\r\n                takePositionX--;\r\n                break;\r\n            case 15:\r\n                takePositionX--;\r\n                takePositionY--;\r\n                break;\r\n        }\r\n        \r\n        for (let index in blocks.walls){\r\n            if (blocks.walls[index].positionX == takePositionX \r\n                && blocks.walls[index].positionY == takePositionY){\r\n                    type = 1;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (let index in blocks.foods){\r\n            if (blocks.foods[index].positionX == takePositionX \r\n                && blocks.foods[index].positionY == takePositionY){\r\n                    foodIsIntoxicated = blocks.foods[index].isIntoxicated;\r\n                        \r\n                    if (foodIsIntoxicated){\r\n                        type = 4;\r\n                    } else {\r\n                        type = 2;\r\n                    }\r\n\r\n                    foodIndex = index;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (let index in blocks.unicellulars){\r\n            if (blocks.unicellulars[index].positionX == takePositionX \r\n                && blocks.unicellulars[index].positionY == takePositionY){\r\n                    type = 3;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        switch(type){\r\n            case 1:\r\n                // стена\r\n                this.iteratorUp(1);\r\n                break;\r\n            case 2:\r\n                // еда\r\n                this.iteratorUp(2);\r\n                \r\n                if (!foodIsIntoxicated){\r\n                    this.healthUp();\r\n                } \r\n\r\n                delete(blocks.foods[foodIndex]);\r\n                break;\r\n\r\n            case 3:\r\n                // бот\r\n                this.iteratorUp(3);\r\n                break;\r\n            case 4:\r\n                // яд\r\n                blocks.foods[foodIndex].isIntoxicated = false;\r\n                this.iteratorUp(4)\r\n                break;\r\n            default:\r\n                // пусто\r\n                this.iteratorUp(5);\r\n                break;\r\n        }\r\n\r\n        this.subIterator = 10;\r\n    }\r\n\r\n    see(value){\r\n        let type = 1;\r\n\r\n        let takePositionX = this.positionX;\r\n        let takePositionY = this.positionY;\r\n        let foodIsIntoxicated = false;\r\n\r\n        switch(value){\r\n            case 8:\r\n                takePositionY--;\r\n                break;\r\n            case 9:\r\n                takePositionY--;\r\n                takePositionX++;\r\n                break;\r\n            case 10:\r\n                takePositionX++;\r\n                break;\r\n            case 11:\r\n                takePositionX++;\r\n                takePositionY++;\r\n                break;\r\n            case 12:\r\n                takePositionY++;\r\n                break;\r\n            case 13:\r\n                takePositionX--;\r\n                takePositionY++;\r\n                break;\r\n            case 14:\r\n                takePositionX--;\r\n                break;\r\n            case 15:\r\n                takePositionX--;\r\n                takePositionY--;\r\n                break;\r\n        }\r\n\r\n        for (let index in blocks.walls){\r\n            if (blocks.walls[index].positionX == takePositionX \r\n                && blocks.walls[index].positionY == takePositionY){\r\n                    type = 1;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (let index in blocks.foods){\r\n            if (blocks.foods[index].positionX == takePositionX \r\n                && blocks.foods[index].positionY == takePositionY){\r\n                    foodIsIntoxicated = blocks.foods[index].isIntoxicated;\r\n                        \r\n                    if (foodIsIntoxicated){\r\n                        type = 4;\r\n                    } else {\r\n                        type = 2;\r\n                    }\r\n\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (let index in blocks.unicellulars){\r\n            if (blocks.unicellulars[index].positionX == takePositionX \r\n                && blocks.unicellulars[index].positionY == takePositionY){\r\n                    type = 3;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        switch(type){\r\n            case 1:\r\n                // стена\r\n                this.iteratorUp(1);\r\n                break;\r\n            case 2:\r\n                // еда\r\n                this.iteratorUp(2);\r\n                break;\r\n            case 3:\r\n                // бот\r\n                this.iteratorUp(3);\r\n                break;\r\n            case 4:\r\n                // яд\r\n                this.iteratorUp(4);\r\n                break;\r\n            default:\r\n                // пусто\r\n                this.iteratorUp(5);\r\n                break;\r\n        }\r\n\r\n        this.subIterator++;\r\n    }\r\n\r\n    rotate(value){\r\n        this.direction += (value - 24);\r\n\r\n        if (this.direction > 7){\r\n            this.direction = this.direction - 8;\r\n        }\r\n\r\n        this.subIterator++;\r\n        this.iteratorUp();\r\n    }\r\n\r\n    healthUp(){\r\n        this.health += 10;\r\n\r\n        if (this.health > 200){\r\n            this.health = 200;\r\n        }\r\n    }\r\n\r\n    iteratorUp(value){\r\n        if (value === undefined){\r\n            this.iterator++;\r\n        } else {\r\n            this.iterator += value;\r\n        }\r\n\r\n        if (this.iterator > 63) {\r\n            this.iterator = this.iterator - 64;\r\n        }\r\n    }\r\n\r\n    death(){\r\n        for (const index in blocks.unicellulars){\r\n            if (blocks.unicellulars[index] === this){\r\n                delete(blocks.unicellulars[index]);\r\n            }\r\n        }\r\n    }\r\n}\r\nUnicellular.count = 0;\r\n\r\nclass Food extends Stuff {\r\n    constructor(context, positionX, positionY, isIntoxicated){\r\n        super(context, positionX, positionY);\r\n        this.context = context;\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n        this.isIntoxicated = isIntoxicated\r\n    }\r\n\r\n    getColor(){\r\n        if (this.isIntoxicated){\r\n            return 'red';\r\n        } else {\r\n            return 'green';\r\n        }\r\n    }\r\n}\r\nFood.count = 0;\r\n\r\nclass Wall extends Stuff {\r\n    constructor(context, positionX, positionY){\r\n        super(context, positionX, positionY);\r\n        this.context = context;\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n    }\r\n\r\n    getColor(){\r\n        return 'black';\r\n    }\r\n}\r\nWall.count = 0;\r\n\r\nconst blocks = {\r\n    unicellulars: {},\r\n    stuffs: {},\r\n    foods: {},\r\n    walls: {},\r\n    Stuff,\r\n    Unicellular,\r\n    Food,\r\n    Wall\r\n}\r\n\r\nmodule.exports = blocks;","const settings = require('./settings');\r\nconst blocks = require('./blocks');\r\n\r\nconst wrapper = document.createElement('div');\r\nconst canvas = document.createElement('canvas');\r\nconst totalIterationText = document.createElement('p');\r\nconst totalGenerationText = document.createElement('p');\r\nconst totalSurvivorText = document.createElement('p');\r\nconst toolbar = document.createElement('div');\r\nconst body = document.body;\r\nconst pauseButton = document.createElement('button');\r\n\r\nconst view = {\r\n    context: null,\r\n    init,\r\n    pauseToggle,\r\n    updateCanvas\r\n}\r\n\r\nfunction init(){\r\n    document.body.append(wrapper);\r\n    wrapper.append(canvas);\r\n    wrapper.append(toolbar);\r\n    wrapper.append(totalIterationText);\r\n    wrapper.append(totalGenerationText);\r\n    wrapper.append(totalSurvivorText);\r\n    \r\n    body.style.backgroundColor = '#000';\r\n    wrapper.style.width = `${settings.VIEW_WIDHT}px`;\r\n    wrapper.style.margin = 'auto';\r\n    \r\n    // canvas\r\n    view.context = canvas.getContext('2d');\r\n    canvas.style.backgroundColor = '#FFF';\r\n    canvas.width = settings.VIEW_WIDHT;\r\n    canvas.height = settings.VIEW_HEIGHT;\r\n    \r\n    // toolbar\r\n    pauseButton.textContent = \"Start\";\r\n    pauseButton.addEventListener('click', pauseToggle);\r\n    toolbar.append(pauseButton);\r\n    \r\n    totalIterationText.style.color = '#FFF';\r\n    totalGenerationText.style.color = '#FFF';\r\n    totalSurvivorText.style.color = '#FFF';\r\n}\r\n\r\nfunction pauseToggle(){\r\n    settings.isPaused = !settings.isPaused;\r\n\r\n    if (settings.isPaused) {\r\n        pauseButton.textContent = 'Play';\r\n    } else {\r\n        pauseButton.textContent = 'Pause';\r\n    }\r\n}\r\n\r\nfunction infoUpdate(){\r\n    totalIterationText.textContent = `Iterations: ${settings.totalIterations}`;\r\n    totalGenerationText.textContent = `Generation: ${settings.totalGenerations}`;\r\n    totalSurvivorText.textContent = `Survivors: ${settings.totalSurvivors}`;\r\n}\r\n\r\nfunction updateCanvas(){\r\n    requestAnimationFrame(updateCanvas);\r\n    infoUpdate();\r\n    canvas.width = canvas.width;\r\n\r\n    for (const index in blocks.unicellulars){\r\n        blocks.unicellulars[index].draw();\r\n    }\r\n\r\n    for (const index in blocks.foods){\r\n        blocks.foods[index].draw();\r\n    }\r\n\r\n    for (const index in blocks.walls){\r\n        blocks.walls[index].draw();\r\n    }\r\n}\r\n\r\nmodule.exports = view;","const settings = require('./settings');\r\nconst blocks = require('./blocks');\r\n\r\nfunction check(){\r\n    if ('unicellulars' in localStorage && settings.saveEnabled){\r\n        const unicsStors = JSON.parse(localStorage['unicellulars']);\r\n        for (const index in unicsStors){\r\n            unicellulars[index] = new blocks.Unicellular(view.context, unicsStors[index].positionX, unicsStors[index].positionY, unicsStors[index].iterator);\r\n    \r\n            unicellulars[index].nda = unicsStors[index].nda;\r\n            \r\n            if (index > blocks.Unicellular.count){\r\n                blocks.Unicellular.count = index;\r\n            }\r\n        }\r\n        blocks.Unicellular.count++;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    check\r\n}","const settings = require('./settings');\r\nconst blocks = require('./blocks');\r\nconst position = require('./position');\r\nconst view = require('./view');\r\nconst adds = require('./adds');\r\n\r\nfunction init(){\r\n\r\n    if (Object.keys(blocks.unicellulars).length == 0){\r\n        while (Object.keys(blocks.unicellulars).length < settings.UNICELLULAR_COUNT) {\r\n            const newPosition = position.getNewPosition();\r\n            blocks.unicellulars[blocks.Unicellular.count++] = new blocks.Unicellular(view.context, newPosition.x,\r\n                newPosition.y);\r\n        }\r\n    } else {\r\n        for (let i = 0; i < settings.UNICELLULAR_CHILDREN; i++) {\r\n            const newPosition = position.getNewPosition();\r\n            blocks.unicellulars[blocks.Unicellular.count++] = new blocks.Unicellular(view.context, newPosition.x,\r\n                newPosition.y);\r\n        }\r\n    }\r\n    \r\n    while (blocks.Food.count < settings.FOOD_COUNT) {\r\n        const newPosition = position.getNewPosition();\r\n        let isIntoxicated = false;\r\n    \r\n        if (!(adds.getRandomInt(0, 100) > settings.INTOXICATE_PROB)){\r\n            isIntoxicated = true;\r\n        }\r\n        \r\n        blocks.foods[blocks.Food.count++] = new blocks.Food(view.context, newPosition.x,\r\n            newPosition.y, isIntoxicated);\r\n    }\r\n    \r\n    while (blocks.Wall.count < settings.WALL_COUNT) {\r\n        const newPosition = position.getNewPosition();\r\n        \r\n        blocks.walls[blocks.Wall.count++] = new blocks.Wall(view.context, newPosition.x,\r\n            newPosition.y);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    init\r\n}","const settings = require('./settings');\r\nconst blocks = require('./blocks');\r\nconst view = require('./view');\r\nconst position = require('./position');\r\nconst adds = require('./adds');\r\n\r\nfunction run() {\r\n    if (!settings.isPaused){\r\n        settings.totalIterations++;\r\n        const survivor = Object.keys(blocks.unicellulars).length;\r\n\r\n        for (const index in blocks.unicellulars){\r\n            if (blocks.unicellulars[index].health > 0) {\r\n                blocks.unicellulars[index].do();\r\n            } else {\r\n                blocks.unicellulars[index].death();\r\n            }\r\n        }\r\n\r\n        while (Object.keys(blocks.foods).length < settings.FOOD_COUNT) {\r\n            const newPosition = position.getNewPosition();\r\n\r\n            let isIntoxicated = false;\r\n\r\n            if (!(adds.getRandomInt(0, 100) > settings.INTOXICATE_PROB)){\r\n                isIntoxicated = true;\r\n            }\r\n\r\n            blocks.foods[blocks.Food.count++] = new blocks.Food(view.context, newPosition.x,\r\n                newPosition.y, isIntoxicated);\r\n        }\r\n            \r\n        if (survivor == 0){\r\n            view.pauseToggle();\r\n        }\r\n\r\n        if (survivor < (settings.UNICELLULAR_COUNT / 5)){\r\n            const newUnicellulars = {};\r\n            let newUnicellularsCount = 0;\r\n            settings.totalGenerations++;\r\n\r\n            if (survivor > 0 && settings.saveEnabled){\r\n                localStorage['unicellulars'] = JSON.stringify(blocks.unicellulars);\r\n            } \r\n\r\n            for (const index in blocks.unicellulars){\r\n                const u = blocks.unicellulars[index];\r\n                blocks.unicellulars[index].health = 100;\r\n\r\n                for (let i = 0; i < settings.UNICELLULAR_CHILDREN; i++){\r\n                    const newPosition = position.getNewPosition();\r\n                    newUnicellulars[newUnicellularsCount] = new blocks.Unicellular(\r\n                        u.context, \r\n                        newPosition.x, \r\n                        newPosition.y,\r\n                        u.iterator\r\n                    );\r\n                    u.nda.forEach((value, index, arr) => {\r\n                        if (i == 0){\r\n                            const randomD = adds.getRandomInt(0, 63);\r\n                            \r\n                            if (randomD === NaN || randomD === null){\r\n                                debugger;\r\n                            }\r\n\r\n                            if (value === NaN || value === null){\r\n                                debugger;\r\n                                value = 0;\r\n                            }\r\n\r\n                            if (index != randomD){\r\n                                newUnicellulars[newUnicellularsCount].nda[index] = value;\r\n                            } else {\r\n                                newUnicellulars[newUnicellularsCount].nda[index] = randomD;\r\n                            }\r\n                        } else {\r\n                            newUnicellulars[newUnicellularsCount].nda[index] = value;\r\n                        }\r\n                    });\r\n                    newUnicellularsCount++\r\n                }\r\n            }\r\n\r\n\r\n            for (const index in newUnicellulars){\r\n                blocks.unicellulars[blocks.Unicellular.count++] = newUnicellulars[index];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    run\r\n}","const settings = require('./settings');\r\nconst blocks = require('./blocks');\r\nconst adds = require('./adds');\r\n\r\nfunction getNewPosition(){\r\n    let unique = false;\r\n    const position = {\r\n        x: 0,\r\n        y: 0\r\n    };\r\n\r\n    do {\r\n        position.x = adds.getRandomInt(0, settings.MAIN_WIDTH);\r\n        position.y = adds.getRandomInt(0, settings.MAIN_HEIGHT);\r\n        unique = true;\r\n\r\n        for (let index in blocks.unicellulars) {\r\n            if(blocks.unicellulars[index].positionX == position.x && blocks.unicellulars[index].positionY == position.y) {\r\n                unique = false;\r\n                break;\r\n            }\r\n        }        \r\n\r\n        if (unique) {\r\n            for (let index in blocks.foods) {\r\n                if(blocks.foods[index].positionX == position.x && blocks.foods[index].positionY == position.y) {\r\n                    unique = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (unique) {\r\n            for (let index in blocks.walls) {\r\n                if(blocks.walls[index].positionX == position.x && blocks.walls[index].positionY == position.y) {\r\n                    unique = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } while(!unique);\r\n            \r\n    return position;\r\n}\r\n\r\nmodule.exports = {\r\n    getNewPosition\r\n}","function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nmodule.exports = {\r\n    getRandomInt\r\n}"],"sourceRoot":""}